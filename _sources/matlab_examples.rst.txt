Accessing clients in MATLAB
===========================

Although there is no MATLAB client for Radiens, the Python client may be accessed via MATLAB using some built-in functionality.

1. First download and install Python if not already installed. Check that you have (or are installing) the correct Python version for your version of MATLAB `here <https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/support/sysreq/files/python-compatibility.pdf>`_. For trouble shooting see `these docs <https://www.mathworks.com/help/matlab/matlab_external/install-supported-python-implementation.html>`_.

2. Next you need to tell matlab where your python executable is (if you are using an environment, direct ``pypath`` to that binary).  The following lines must be run once upon every matlab launch. 

.. literalinclude:: ../tutorials/set_pypath.m
    :language: matlab
    :caption: Because of the asyncronous nature of Python env creation in via MATLAB, we recommended that you run these lines outside of your main script to avoid errors.


3. The following command only needs to be run once per unique ``pypath``. That is, you'll only have to install radiens again if you change the python executable matlab uses.

.. literalinclude:: ../tutorials/install_radiens.m
    :language: matlab

4. Once the above has executed successfully, you can access the clients. The following are some of the same use cases we saw :ref:`previously <Python examples>`, but this time in MATLAB.

Streaming live signals
----------------------

.. literalinclude:: ../tutorials/allego_client_example.m
    :language: matlab

Note that the type conversions add noticable latency, and the effective loop duration may be considerably larger than ``loop_dur``.

Get spikes from a data set
--------------------------

.. literalinclude:: ../tutorials/get_spikes_file.m
    :language: matlab

.. Loading and accessing saved recording
.. -------------------------------------

.. .. literalinclude:: ../tutorials/videre_client_example.m
..     :language: matlab
